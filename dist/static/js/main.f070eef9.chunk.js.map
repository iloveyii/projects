{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/auth.js","store/types/auth.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/project.js","store/types/project.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["mapActionsToProps","signOut","dispatch","getState","_ref2","getFirebase","auth","then","type","catch","err","connect","state","authError","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notification","notifications","map","notification","i","key","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","firstName","createdAt","toString","calendar","ProjectList","projects","id","projects_ProjectSummary","Dashboard","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextProps","nextState","nextContext","console","log","_this$props","projects_ProjectList","dashboard_Notification","react_router","React","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","history","push","SignIn","email","password","handleSubmit","bind","assertThisInitialized","handleChange","e","setState","defineProperty","target","value","preventDefault","signIn","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","showProjectList","createProject","showProjectsList","authorId","add","objectSpread","Date","payload","withRouter","App","layout_Navbar","exact","path","component","ProjectDetails","SignUp","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","newState","assign","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f070eef9.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/auth\";\n\nconst SignedInLinks = (props) => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={props.signOut} to='/'>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        authError: state.auth.authError\n    }\n};\nconst mapActionsToProps = {\n    signOut\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(SignedInLinks);\n","import {\n    LOGIN,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    SIGN_UP_FAIL,\n    SIGN_UP_SUCCESS,\n    SIGNOUT_FAIL,\n    SIGNOUT_SUCCESS\n} from \"../types/auth\";\n\nexport const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then( () => {\n            dispatch( { type : LOGIN_SUCCESS})\n        }).catch(  err => {\n            dispatch({ type: LOGIN_FAIL, err });\n        })\n    }\n};\n\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then( () => {\n            dispatch( { type : SIGNOUT_SUCCESS})\n        }).catch(  err => {\n            dispatch({ type: SIGNOUT_FAIL, err });\n        })\n    }\n};\n\n\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then( (resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(  () => {\n            dispatch({ type: SIGN_UP_SUCCESS });\n        }).catch(  err => {\n            dispatch({ type: SIGN_UP_FAIL, err });\n        })\n    }\n};\n","export const LOGIN = 'Login';\nexport const LOGIN_SUCCESS = 'Login.Success';\nexport const LOGIN_FAIL = 'Login.Fail';\n\nexport const SIGNOUT = 'Signout';\nexport const SIGNOUT_SUCCESS = 'Signout.Success';\nexport const SIGNOUT_FAIL = 'Signout.Fail';\n\nexport const SIGN_UP = 'Signup';\nexport const SIGN_UP_SUCCESS = 'Signup.Success';\nexport const SIGN_UP_FAIL = 'Signup.Fail';\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\n\nconst SignedOutLinks = () => {\n    return(\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Sign up</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks/>;\n\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand.logo\">Home</Link>\n                {links}\n            </div>\n        </nav>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from \"moment\";\n\n\nconst Notification = (props) => {\n    const {notifications} = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {\n                            notifications && notifications.map((notification, i) => {\n                                return (\n                                    <li key={i}>\n                                        <span className=\"pink-text\">{notification.user} </span>\n                                        <span>{notification.content}</span>\n                                        <div className=\"grey-text note-date\">\n                                            {moment(notification.time.toDate()).fromNow()}\n                                        </div>\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notification;\n","import React from 'react';\nimport moment from \"moment\";\n\n\nconst ProjectSummary = ({project}) => {\n    return (\n\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted By {project.firstName} </p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n            </div>\n        </div>\n\n    )\n};\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from \"react-router-dom\";\n\n\nconst ProjectList = ({projects}) => {\n\n    return(\n        <div className=\"project-list section\">\n            {\n                projects && projects.map( (project, i) => <Link to={'/project/' + project.id} key={i}><ProjectSummary key={i} project={project} /> </Link>)\n            }\n        </div>\n    )\n}\n\nexport default ProjectList;\n","import React from 'react';\nimport Notification from './Notification';\nimport ProjectList from '../projects/ProjectList';\nimport {connect} from \"react-redux\";\nimport {compose} from 'redux';\nimport 'firebase/database';\nimport { Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\n\n\nclass Dashboard extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            projects: []\n        };\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        console.log('componentWillUpdate', nextProps, nextContext);\n\n    }\n\n   componentWillReceiveProps(nextProps, nextContext) {\n       console.log('componentWillReceiveProps', nextProps, nextContext);\n   }\n\n    componentDidMount() {\n        console.log('Component did mount');\n    }\n\n    render() {\n        const {projects, auth, notifications} = this.props;\n\n        if(!auth.uid) return <Redirect to={'/signin'} />\n        \n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notification notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    // console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        notifications: state.firestore.ordered.notifications,\n        auth: state.firebase.auth\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 50, orderBy : ['time', 'desc'] }\n    ])\n)(Dashboard)\n","import React from 'react';\nimport {firestoreConnect} from 'react-redux-firebase';\nimport {connect} from \"react-redux\";\nimport {compose} from 'redux';\nimport {Redirect} from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n    const {project, auth} = props;\n\n    if (!project) return <div>Loading ...</div>;\n    if (!auth.uid) return <Redirect to={'/signin'}/>\n\n    return (\n\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{project.title} </span>\n                    <p>{project.content}</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by {project.firstName} </div>\n                    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\n\n                    <div className=\"input-field\">\n                        <button onClick={() => props.history.push('/')} className=\"btn green lighten-1 z-depth-0\">Back</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    console.log(state);\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    console.log(projects);\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(ProjectDetails);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/auth\";\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: ''\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signIn(this.state);\n\n    }\n    render() {\n        const { authError, auth } = this.props;\n\n        if(auth.uid) return <Redirect to={'/'} />\n\n        return(\n            <div className=\"container\">\n\n                <form onSubmit={this.handleSubmit} className=\"white\">\n\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={ this.handleChange } />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={ this.handleChange } />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            <p>{authError}</p>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        authError: state.auth.authError,\n        auth : state.firebase.auth\n    }\n};\nconst mapActionsToProps = {\n    signIn\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(SignIn);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/auth\";\n\nclass SignIn extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            firstName: '',\n            lastName: ''\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signUp(this.state);\n    }\n\n    render() {\n        const { auth, authError } = this.props;\n\n        if(auth.uid) return <Redirect to={'/'} />;\n\n        return(\n            <div className=\"container\">\n\n                <form onSubmit={this.handleSubmit} className=\"white\">\n\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={ this.handleChange } />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={ this.handleChange } />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={ this.handleChange } />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={ this.handleChange } />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\"><p>{authError}</p></div>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {\n    signUp\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(SignIn);\n","import React from 'react';\nimport  { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/project\";\nimport {withRouter, Redirect} from 'react-router-dom';\n\nclass CreateProject extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            content: ''\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.showProjectList = this.showProjectList.bind(this);\n    }\n\n    showProjectList() {\n        this.props.history.push('/');\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.id] : e.target.value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.createProject(this.state, this.showProjectList);\n        this.props.history.push('/');\n    }\n    render() {\n        const {auth} = this.props;\n\n        if(!auth.uid) return <Redirect to={'/signin'} />\n\n        return(\n            <div className=\"container\">\n\n                <form onSubmit={this.handleSubmit} className=\"white\">\n\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={ this.handleChange } />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n\n                </form>\n            </div>\n        );\n    }\n}\n\n/**\n * Get data from store\n * @param state\n */\nconst mapStateToProps = state => ({\n    auth: state.firebase.auth\n});\n\n/**\n * Import action from dir action above - but must be passed to connect method in order to trigger reducer in store\n * @type {{UserUpdate: UserUpdateAction}}\n */\nconst mapActionsToProps = {\n    createProject\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(CreateProject));\n\n","import { ADD_PROJECT, ADD_PROJECT_FAIL } from \"../types/project\";\n\n\nexport const createProject = (project, showProjectsList) => {\n    /* return {\n        type: ADD_PROJECT,\n        payload: {project}\n    } */\n\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n           ...project,\n            firstName: profile.firstName,\n            lastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then( () => {\n            dispatch( { type: ADD_PROJECT, payload: project, showProjectsList : showProjectsList });\n        }).catch( (err) => {\n            dispatch( { type: ADD_PROJECT_FAIL, err } );\n        })\n\n    }\n};\n","export const ADD_PROJECT = 'Add.Project';\nexport const ADD_PROJECT_SUCCESS = 'Add.Project.Success';\nexport const ADD_PROJECT_FAIL = 'Add.Project.Fail';\n","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\n\nimport './App.css';\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Navbar/>\n                <Switch>\n                    <Route exact path='/' component={Dashboard}/>\n                    <Route path='/project/:id' component={ProjectDetails}/>\n                    <Route path='/signin' component={SignIn}/>\n                    <Route path='/signup' component={SignUp}/>\n                    <Route path='/create' component={CreateProject}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {LOGIN_FAIL, LOGIN_SUCCESS, SIGN_UP_FAIL, SIGN_UP_SUCCESS, SIGNOUT_SUCCESS} from \"../types/auth\";\n\nconst initState = {\n    authError : null\n};\n\nconst authReducer = ( state = initState, action ) => {\n    switch (action.type) {\n        case LOGIN_FAIL:\n            console.log('Login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case LOGIN_SUCCESS:\n            console.log('Login success');\n            return {\n                ...state,\n                authError: null\n            };\n        case SIGNOUT_SUCCESS:\n            console.log('Sign out success');\n            return {\n                ...state\n            };\n        case SIGN_UP_SUCCESS:\n            console.log('Sign up success');\n            return {\n                ...state,\n                authError: null\n            };\n        case SIGN_UP_FAIL:\n            console.log('Sign up error');\n            return {\n                ...state,\n                authError: action.err.message\n            };\n\n        default:\n            return { ...state };\n    }\n};\n\nexport default authReducer;\n","import {ADD_PROJECT, ADD_PROJECT_SUCCESS, ADD_PROJECT_FAIL} from \"../types/project\";\n\nconst initState2 = {\n    projects: [\n        { id: 1, title: 'Help me find peach', content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet ducimus hic quidem! Animi autem blanditiis, dicta eos fugit impedit incidunt iste, labore magnam maiores mollitia nihil placeat sint unde vitae?' },\n        { id: 2, title: 'Firebase tut', content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet ducimus hic quidem! Animi autem blanditiis, dicta eos fugit impedit incidunt iste, labore magnam maiores mollitia nihil placeat sint unde vitae?\" },\n        { id: 3, title: 'GraphQL in queue', content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet ducimus hic quidem! Animi autem blanditiis, dicta eos fugit impedit incidunt iste, labore magnam maiores mollitia nihil placeat sint unde vitae?' },\n        { id: 4, title: 'GCP tut', content: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet ducimus hic quidem! Animi autem blanditiis, dicta eos fugit impedit incidunt iste, labore magnam maiores mollitia nihil placeat sint unde vitae?' },\n    ]\n};\n\nconst initState = {};\n\nconst projectReducer = ( state = initState, action ) => {\n    switch (action.type) {\n        case ADD_PROJECT:\n            const newState = Object.assign({}, state);\n            newState.projects.push(action.payload);\n            console.log('inside projectReducer' , action);\n            return newState;\n            break;\n\n        case ADD_PROJECT_FAIL:\n            console.log('Error in create project reducer', action);\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default projectReducer;\n","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar config = {\n    apiKey: \"AIzaSyC0Q2xFnmVhwCogJFoxDR2bvVJh1ZZC7gI\",\n    authDomain: \"eshop-aa94e.firebaseapp.com\",\n    databaseURL: \"https://eshop-aa94e.firebaseio.com\",\n    projectId: \"eshop-aa94e\",\n    storageBucket: \"eshop-aa94e.appspot.com\",\n    messagingSenderId: \"1085585020624\"\n};\n\nfirebase.initializeApp(config);\n// firebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, compose, createStore} from 'redux';\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n/**\n * Firebase api access\n */\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady : true }), // redux binding for firebase\n        reduxFirestore(fbConfig) // redux bindings for firestore\n    )\n);\n\nstore.firebaseAuthIsReady.then( () => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App/>\n        </Provider>\n        , document.getElementById('root'));\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}